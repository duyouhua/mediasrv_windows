[mediasrv]


#日志级别 FATAL ERROR WARNING INFO DEBUG  DETAIL
log_level=DETAIL
log_file=log/mediasrv.log
log_file_size=
#是否是输出信息到终端
log_console=1
#是否是输出调试信息
log_debug=1

legacy_support=0

callback_plugin=libluaplugin.dll
callback_enable=1

#设置lua的脚本路径
lua_file=udpoutput.lua

#lua始终工作在多线程模式下
#设成1 各个线程不能互相访问数据，对开发来说相当于单线程
lua_stand_alone=0

# master cdn slave mixed
#设成cdn模式如果视频源不存在，会调用lua 中的 OnGetSourceStreamURL 读取源站地址
#设成slave或者mixed模式如果视频源不存在，会从下面的 master_addr 读取源站地址
#一般搭建IPTV使用 slave master 或者 mixed,搭建直播使用cdn模式
mode=master
#地址不要设成本机地址
master_addr=
#如果使用libmalloc2的缓存版本，该选项有效
cached_memory=1024

#是否缓存一组视频,打开该选项可使播放器快速打开视频
cached_gop=1

delayclose_virtual_live_seconds=10

ts_record_pcr_video=1
ts_hls_pcr_video=1
ts_http_pcr_video=1

ts_enable_sdt=0
ts_force_video_audio=1

ts_transport_stream_id=0x0001
ts_service_id=0x07dd
ts_start_pid=0x0bba
ts_provider_name=bbs.lanyu123.com
udpts_delay=10
#MP4/FLV/TS录像 和HLS工作的线程
disk_io_threads=1

#是否缓存一组视频,打开该选项可使播放器快速打开视频
cached_gop=1


#视频最大缓存的时间，单位毫秒
max_video_cache_time=5000

#网络超时时间单位秒
timeout=20
#最大发送数据包个数
max_sends=2000
#最大发送缓冲区 KB
max_writting_bytes=4096

#下面的线程设置根据机器配置情况调节

#数据发送线程 为0会取CPU的核心数和8的最小值
send_threads=1
#每个数据发送线程的最大客户端数量
max_clients_per_thread=500

#视频音频数据处理线程
dataprocess_threads=1

#网络事件处理线程
networkevent_threads_httpd=1
networkevent_threads_httpts=1
networkevent_threads_rtmp=1
networkevent_threads_ets=1
networkevent_threads_rtsp=1

[cdn_server]
#可以为每个节点起个名字 node_id
node_id=test1
#开启内置CDN调度，开启后lua的调度函数不再被执行
enable=0
#可同时设置3个cdn服务器 任意两台出现故障不影响服务
#记得更改下面的 IP指向
cdn_addr1=127.0.0.1 
cdn_addr2=
cdn_addr3=

[transcodesrv_api_addr]
addr=127.0.0.1
port=180
enable=1
[mediasrv_api_addr]
#streamsrv控制mediasrv的端口
bind_addr=127.0.0.1
port=580
enable=1
[gb28181_api_addr]
#streamsrv控制mediasrv的端口
addr=192.168.1.188
port=680
enable=0
[onvif0]
enable=1
bind_addr=*
bind_addr6=
port=380
discover_bind_addr=*
domain=
domain_rtsp=

[ets0]
network_threads=1
enable=1
bind_addr=
port=2554
publish=1
playback=1

memory_file=1
output_hls=0
hls_dir=/
hls_ts_prefix=

record_ts=1
record_ts_dir=D:/web/www/video/
[rtmp0]
network_threads=1
enable_rtmp=1
enable_rtmpt=1
bind_addr=
port=1935
publish=1
playback=1
app=live
chunksize=65535

memory_file=1
output_hls=0
hls_dir=/
hls_ts_prefix=

record_ts=0
record_ts_dir=D:/web/www/video/
[rtmp1]
network_threads=1
#内部推流使用
enable=1
#通过流媒体服务器获取设置  use_setting_srv=1
use_setting_srv=1
#强制打开rtmp回放，即使流媒体服务器 不允许输出RTMP
force_playback=1

enable_rtmp=1
enable_rtmpt=0
bind_addr=
port=2935
publish=1
playback=1
app=live
chunksize=65535



memory_file=1
output_hls=1
hls_dir=/
hls_ts_prefix=

record_ts=1
record_ts_dir=D:/web/www/video/
[rtsp0]
network_threads=1
enable=1
#绑定本地IP为录像提供视频流
bind_addr=
port=554

#强制打开rtsp回放，即使流媒体服务器不允许输出rtsp,如果使用NVR服务器录像，必须打开
force_rtsp_play=1
#强制打开http_ts回放，即使流媒体服务器不允许输出http_ts,如果使用录像服务器录像，必须打开
force_http_ts_play=1
force_vod_tcp=1
enable=1
enable_ts=1
enable_flv=1
enable_aac=1
[http0]
network_threads=1
enable=1
enable_ts=1
enable_flv=1
enable_aac=1
#绑定本地IP为录像提供视频流
bind_addr=
port=281
[hls]
ts_duration=5
m3u8_files=3
keep_old_files=3
split_inkeyframe=1
name_type=
split_time=stream
audio_wait_video_seconds=20
[httpd-hls0]
network_threads=1
#打开http服务，为HLS内存切片使用
enable=1
bind_addr=
port=280
www_root=D:/web/www/
keepalive=0
[record]
#每1800秒生成一个录像文件
record_duration=60
record_type=nvr
nvr2_dir=D:/web/www/video/
[nvr2]
Database=nvr2
Extra=MySQL
host=127.0.0.1
pass=123456
user=root


